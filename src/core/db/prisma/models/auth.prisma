model Auth {
  id                String         @id @default(cuid())
  email             String         @unique
  phone             String?        @unique
  password          String
  pin               String
  isDeleted         Boolean        @default(false)
  emailVerified     Boolean        @default(false)
  passwordAttempets Int            @default(0)
  status            authStatus     @default(ACTIVE)
  authLevel         authLevel      @default(USER)
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt
  User              User?
  authSession       AuthSession[]
  authSettings      AuthSettings[]
}

model AuthSession {
  id          String      @id @default(cuid())
  authId      String      @map("authid")
  location    String?
  userAgent   String?
  ipAddress   String?
  deviceId    String?
  authChannel authChannel @default(WEB)
  expiresAt   DateTime
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  Auth Auth @relation(fields: [authId], references: [id])
}

model AuthSettings {
  id         String  @id @default(cuid())
  authId     String  @map("authid")
  mfaEnabled Boolean @default(true)
  mfaType    mfaType @default(EMAIL)
  mfaSecret  String?

  notifications Boolean  @default(true)
  darkMode      Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  auth Auth @relation(fields: [authId], references: [id])
}

enum mfaType {
  EMAIL
  AUTHENTICATOR
  NONE
}

enum authLevel {
  USER
  SUPER_ADMIN
  ADMIN
}

enum authStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
}

enum authChannel {
  WEB
  MOBILE
  API
}
