model KYC {
  id        String    @id @default(cuid())
  userId    String
  status    KYCStatus
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@map("kyc")
}

model KYB {
  id                 String         @id @default(cuid())
  businessId         String         @unique
  submittedBy        String
  legalBusinessName  String
  businessType       String
  registrationNumber String?
  natureOfBusiness   String?
  taxId              String?
  country            String
  status             KYBStatus
  createdAt          DateTime       @default(now())
  updatedAt          DateTime       @updatedAt
  business           Business?      @relation(fields: [businessId], references: [id])
  Address            Address?
  KYBDirectors       KYBDirectors[]

  @@map("kyb")
}

model KYBDirectors {
  id          String   @id @default(cuid())
  email       String   @unique
  kybId       String
  firstName   String
  lastName    String
  otherNames  String?
  phoneNumber String?
  title       String?
  position    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  kyb         KYB      @relation(fields: [kybId], references: [id])

  @@map("kyb_directors")
}

model Address {
  id         String    @id @default(cuid())
  kybId      String    @unique
  street     String
  city       String
  state      String
  country    String
  postalCode String
  isVerified Boolean   @default(false)
  verifiedBy String?
  verifiedAt DateTime?
  notes      String?   @db.Text
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  kyb        KYB?      @relation(fields: [kybId], references: [id])
}

enum KYBStatus {
  PENDING
  APPROVED
  REJECTED
}

enum KYCStatus {
  PENDING
  APPROVED
  REJECTED
}
